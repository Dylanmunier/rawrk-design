// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides AI-powered customization suggestions for a given vehicle model.
 *
 * - customizationSuggestions - A function that suggests vehicle customizations based on user input.
 * - CustomizationSuggestionsInput - The input type for the customizationSuggestions function.
 * - CustomizationSuggestionsOutput - The return type for the customizationSuggestions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CustomizationSuggestionsInputSchema = z.object({
  vehicleModel: z.string().describe('The model of the vehicle to customize.'),
  userPreferences: z
    .string()
    .describe(
      'A description of the users preferences. Consider their personality and style.'
    ),
});
export type CustomizationSuggestionsInput = z.infer<typeof CustomizationSuggestionsInputSchema>;

const CustomizationSuggestionsOutputSchema = z.object({
  suggestedInteriorStyle: z
    .string()
    .describe('A suggested interior style for the vehicle.'),
  suggestedComfortOptions: z
    .array(z.string())
    .describe('A list of suggested comfort options for the vehicle.'),
  reasoning: z.string().describe("The AI's reasoning for these suggestions."),
});
export type CustomizationSuggestionsOutput = z.infer<typeof CustomizationSuggestionsOutputSchema>;

export async function customizationSuggestions(
  input: CustomizationSuggestionsInput
): Promise<CustomizationSuggestionsOutput> {
  return customizationSuggestionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'customizationSuggestionsPrompt',
  input: {schema: CustomizationSuggestionsInputSchema},
  output: {schema: CustomizationSuggestionsOutputSchema},
  prompt: `You are an expert vehicle customization consultant. A user has selected the {{{vehicleModel}}} and has the following preferences: {{{userPreferences}}}. The color is fixed and cannot be changed.

  Based on this information, suggest an interior style, and a list of comfort options that would be a good fit for the user.

  Explain your reasoning for each suggestion.

  Output the suggestions in JSON format.`,
});

const customizationSuggestionsFlow = ai.defineFlow(
  {
    name: 'customizationSuggestionsFlow',
    inputSchema: CustomizationSuggestionsInputSchema,
    outputSchema: CustomizationSuggestionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
